#generating output sets with significant p values.
f_fallopian_output <- subset(fallopian_output, fallopian_output$P.Value <= 0.05)
f_immunoreactive_output <- subset(immunoreactive_output, immunoreactive_output$P.Value <= 0.05)
f_proliferative_output <- subset(proliferative_output, proliferative_output$P.Value <= 0.05)
f_mesenchymal_output <- subset(mesenchymal_output, mesenchymal_output$P.Value <= 0.05)
#generate Gene Sets with significant p values
fallopian_gene_set <- row.names(f_fallopian_output)
proliferative_gene_set <- row.names(f_proliferative_output)
mesenchymal_gene_set <- row.names(f_mesenchymal_output)
immunoreactive_gene_set <- row.names(f_immunoreactive_output)
library(limma)
library(Biobase)
#read in necessary files:
df <- read.delim("C:/Users/david/workspace/Ovarian_cancer/TCGA_489_UE.txt")
pf<- read.delim("C:/Users/david/workspace/Ovarian_cancer/phenotype_matrix.txt")
#set row names to genes
row.names(df) <- df$X
row.names(pf) <- pf$Sample_ID
#removes first column of characters (gene names)
df<- df[-1]
pf<- pf[-1]
#subsets phenotype_frame (pf) to get data with platinum status of resistant or sensitive and
#of known ovarian cancer subtype
fallopian_pm <- subset(pf, pf$Platinum.Status %in% c("Resistant", "Sensitive") & pf$Subtype %in% c("Fallopian"))
proliferative_pm <- subset(pf, pf$Platinum.Status %in% c("Resistant", "Sensitive") & pf$Subtype %in% c("Proliferative"))
mesenchymal_pm <- subset(pf, pf$Platinum.Status %in% c("Resistant", "Sensitive") & pf$Subtype %in% c("Mesenchymal"))
immunoreactive_pm <- subset(pf, pf$Platinum.Status %in% c("Resistant", "Sensitive") & pf$Subtype %in% c("Immunoreactive"))
#subsetting pf to sensitive only
s_fallopian_pm <- subset(pf, pf$Platinum.Status %in% c("Sensitive") & pf$Subtype %in% c("Fallopian"))
s_proliferative_pm <- subset(pf, pf$Platinum.Status %in% c("Sensitive") & pf$Subtype %in% c("Proliferative"))
s_mesenchymal_pm <- subset(pf, pf$Platinum.Status %in% c("Sensitive") & pf$Subtype %in% c("Mesenchymal"))
s_immunoreactive_pm <- subset(pf, pf$Platinum.Status %in% c("Sensitive") & pf$Subtype %in% c("Immunoreactive"))
#subsetting pf to resistant only
r_fallopian_pm <- subset(pf, pf$Platinum.Status %in% c("Resistant") & pf$Subtype %in% c("Fallopian"))
r_proliferative_pm <- subset(pf, pf$Platinum.Status %in% c("Resistant") & pf$Subtype %in% c("Proliferative"))
r_mesenchymal_pm <- subset(pf, pf$Platinum.Status %in% c("Resistant") & pf$Subtype %in% c("Mesenchymal"))
r_immunoreactive_pm <- subset(pf, pf$Platinum.Status %in% c("Resistant") & pf$Subtype %in% c("Immunoreactive"))
#converts phenotype_matrix to data frame
#phenotype_matrix<-data.frame(phenotype_matrix)
fallopian_pm <- data.frame(fallopian_pm)
proliferative_pm <- data.frame(proliferative_pm)
mesenchymal_pm <- data.frame(mesenchymal_pm)
immunoreactive_pm <- data.frame(immunoreactive_pm)
#converting platinum status to factor
fallopian_pm$Platinum.Status <- factor(fallopian_pm$Platinum.Status)
proliferative_pm$Platinum.Status <- factor(proliferative_pm$Platinum.Status)
mesenchymal_pm$Platinum.Status <- factor(mesenchymal_pm$Platinum.Status)
immunoreactive_pm$Platinum.Status <- factor(immunoreactive_pm$Platinum.Status)
#subsetting expression data frame(df) to get only columns with relevant
#platinum status
fallopian_list <- names(df) %in% row.names(fallopian_pm)
proliferative_list <-names(df) %in% row.names(proliferative_pm)
mesenchymal_list <- names(df) %in% row.names(mesenchymal_pm)
immunoreactive_list <- names(df) %in% row.names(immunoreactive_pm)
s_fallopian_list <- names(df) %in% row.names(s_fallopian_pm)
s_proliferative_list <- names(df) %in% row.names(s_proliferative_pm)
s_mesenchymal_list <- names(df) %in% row.names(s_mesenchymal_pm)
s_immunoreactive_list <- names(df) %in% row.names(s_immunoreactive_pm)
r_fallopian_list <- names(df) %in% row.names(r_fallopian_pm)
r_proliferative_list <- names(df) %in% row.names(r_proliferative_pm)
r_mesenchymal_list <- names(df) %in% row.names(r_mesenchymal_pm)
r_immunoreactive_list <- names(df) %in% row.names(r_immunoreactive_pm)
#subsetting df for sensitive platinum status
s_data_fallopian <- df[s_fallopian_list]
s_data_proliferative <- df[s_proliferative_list]
s_data_mesenchymal <- df[s_mesenchymal_list]
s_data_immunoreactive <- df[s_immunoreactive_list]
#subsetting df for resistant platinum status
r_data_fallopian <- df[r_fallopian_list]
r_data_proliferative <- df[r_proliferative_list]
r_data_mesenchymal <- df[r_mesenchymal_list]
r_data_immunoreactive <- df[r_immunoreactive_list]
#subsetting df based on cancper subtype
data_fallopian <- df[fallopian_list]
data_proliferative <- df[proliferative_list]
data_mesenchymal <- df[mesenchymal_list]
data_immunoreactive<- df[immunoreactive_list]
#creating design matrix
design_fallopian <- model.matrix(~ fallopian_pm$Platinum.Status - 1)
colnames(design_fallopian) <- c("Resistant", "Sensitive")
design_proliferative <- model.matrix(~ proliferative_pm$Platinum.Status - 1)
colnames(design_proliferative) <- c("Resistant", "Sensitive")
design_mesenchymal <- model.matrix(~ mesenchymal_pm$Platinum.Status - 1)
colnames(design_mesenchymal) <- c("Resistant", "Sensitive")
design_immunoreactive <- model.matrix(~ immunoreactive_pm$Platinum.Status - 1)
colnames(design_immunoreactive) <- c("Resistant", "Sensitive")
#generating linear models
fallopian_fit <- lmFit(data_fallopian, design_fallopian)
proliferative_fit <- lmFit(data_proliferative, design_proliferative)
mesenchymal_fit <- lmFit(data_mesenchymal, design_mesenchymal)
immunoreactive_fit <- lmFit(data_immunoreactive, design_immunoreactive)
fallopian_contrast <- makeContrasts("Resistant-Sensitive", levels = design_fallopian)
proliferative_contrast <- makeContrasts("Resistant-Sensitive", levels = design_proliferative)
mesenchymal_contrast <- makeContrasts("Resistant-Sensitive", levels = design_mesenchymal)
immunoreactive_contrast <- makeContrasts("Resistant-Sensitive", levels = design_immunoreactive)
final_fallopian_fit <- contrasts.fit(fallopian_fit, fallopian_contrast)
final_proliferative_fit <- contrasts.fit(proliferative_fit, proliferative_contrast)
final_mesenchymal_fit <- contrasts.fit(mesenchymal_fit, mesenchymal_contrast)
final_immunoreactive_fit <- contrasts.fit(immunoreactive_fit, immunoreactive_contrast)
final_fallopian_fit <- eBayes(final_fallopian_fit)
final_proliferative_fit <- eBayes(final_proliferative_fit)
final_mesenchymal_fit <- eBayes(final_mesenchymal_fit)
final_immunoreactive_fit <- eBayes(final_immunoreactive_fit)
#Generating outputs
fallopian_output <- data.frame(topTable(final_fallopian_fit, number=11865))
proliferative_output <- data.frame(topTable(final_proliferative_fit, number=11865))
mesenchymal_output <- data.frame(topTable(final_mesenchymal_fit, number=11865))
immunoreactive_output <- data.frame(topTable(final_immunoreactive_fit, number=11865))
#removing adj-p values from output data
#fallopian_output$adj.P.Val <- NULL
#proliferative_output$adj.P.Val <- NULL
#mesenchymal_output$adj.P.Val <- NULL
#immunoreactive_output$adj.P.Val <- NULL
#removing B values from output data
fallopian_output$B <- NULL
proliferative_output$B <- NULL
mesenchymal_output$B <- NULL
immunoreactive_output$B<- NULL
#generating output sets with significant p values.
f_fallopian_output <- subset(fallopian_output, fallopian_output$P.Value <= 0.05)
f_immunoreactive_output <- subset(immunoreactive_output, immunoreactive_output$P.Value <= 0.05)
f_proliferative_output <- subset(proliferative_output, proliferative_output$P.Value <= 0.05)
f_mesenchymal_output <- subset(mesenchymal_output, mesenchymal_output$P.Value <= 0.05)
#generate Gene Sets with significant p values
fallopian_gene_set <- row.names(f_fallopian_output)
proliferative_gene_set <- row.names(f_proliferative_output)
mesenchymal_gene_set <- row.names(f_mesenchymal_output)
immunoreactive_gene_set <- row.names(f_immunoreactive_output)
ma_fallop <- data.frame(fallopian_gene_set)
ma_immuno <- data.frame(immunoreactive_gene_set)
ma_mesen <- data.frame(mesenchymal_gene_set)
ma_prolif <- data.frame(proliferative_gene_set)
View(ma_fallop)
write.table(f_list, "C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/f_genes.txt", sep="\t")
write.table(i_list, "C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/i_genes.txt", sep="\t")
write.table(m_list, "C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/m_genes.txt", sep="\t")
write.table(p_list, "C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/p_genes.txt", sep="\t")
write.table(f_list, "C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/f_genes.txt", sep="\t", row.names = FALSE)
write.table(i_list, "C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/i_genes.txt", sep="\t", row.names = FALSE)
write.table(m_list, "C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/m_genes.txt", sep="\t", row.names = FALSE)
write.table(p_list, "C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/p_genes.txt", sep="\t", row.names = FALSE)
View(m_list)
View(mesen_de)
m_list <- mesen_de$X
m_list <- data.frame(mesen_de$X)
write.table(m_list, "C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/m_genes.txt", sep="\t", row.names = FALSE)
cf_list <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/fallopianDE_names.txt"))
ci_list <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/immunoreactiveDE_names.txt"))
cm_list <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/mesenchymalDE_names.txt"))
cp_list <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/proliferativeDE_names.txt"))
View(cf_list)
names(cf_list) <- c("GeneName")
names(ci_list) <- c("GeneName")
names(cm_list) <- c("GeneName")
names(cp_list) <- c("GeneName")
View(cf_list)
View(cf_list)
View(fallop_de)
row.names(fallop_de) <- cf_names
row.names(immuno_de) <- ci_names
row.names(mesen_de) <- cm_names
row.names(prolif_de) <- cp_names
cf_names <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/fallopianDE_names.txt"))
ci_names <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/immunoreactiveDE_names.txt"))
cm_names <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/mesenchymalDE_names.txt"))
cp_names <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/proliferativeDE_names.txt"))
rm(cf_list, ci_list, cm_list, cp_list)
row.names(fallop_de) <- cf_names
row.names(immuno_de) <- ci_names
row.names(mesen_de) <- cm_names
row.names(prolif_de) <- cp_names
View(cf_names)
cf_names <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/fallopianDE_names.txt"), header = FALSE)
ci_names <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/immunoreactiveDE_names.txt"), header = FALSE)
cm_names <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/mesenchymalDE_names.txt"), header = FALSE)
cp_names <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/proliferativeDE_names.txt"), header = FALSE)
row.names(fallop_de) <- cf_names
row.names(immuno_de) <- ci_names
row.names(mesen_de) <- cm_names
row.names(prolif_de) <- cp_names
View(fallop_de)
View(immuno_de)
help("read.delim")
rm(cf_list, ci_list, cm_list, cp_list)
cf_names <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/fallopianDE_names.txt", header = FALSE))
ci_names <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/immunoreactiveDE_names.txt",  header = FALSE))
cm_names <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/mesenchymalDE_names.txt",  header = FALSE))
cp_names <- data.frame(read.delim("C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_inputs/proliferativeDE_names.txt",  header = FALSE))
View(cf_names)
View(cp_names)
row.names(fallop_de) <- cf_names
row.names(immuno_de) <- ci_names
row.names(mesen_de) <- cm_names
row.names(prolif_de) <- cp_names
View(fallop_de)
a_spc_fall <- data.frame(fallop_de, GeneName = cf_names)
a_spc_imm <- data.frame(immuno_de, GeneName = ci_names)
a_spc_mes <- data.frame(mesen_de, GeneName = cm_names)
a_spc_pro <- data.frame(prolif_de, GeneName = cp_names)
View(a_spc_pro)
View(a_spc_fall)
View(a_spc_fall)
help("subset")
View(f_fallopian_output)
spc_fall <- subset(a_spc_fall, a_spc_fall$V1 %in% row.names(f_fallopian_output), select= a_spc_fall$PValue)
View(spc_fall)
spc_fall <- subset(a_spc_fall, a_spc_fall$V1 %in% row.names(f_fallopian_output))
spc_immuno <- subset(a_spc_imm, a_spc_imm$V1 %in% row.names(f_immunoreactive_output))
spc_mesen <- subset(a_spc_mes, a_spc_mes$V1 %in% row.names(f_mesenchymal_output))
spc_prolif <- subset(a_spc_pro, a_spc_pro$V1 %in% row.names(f_proliferative_output))
fma_rows <- row.names(f_fallopian_output)
ima_rows <- row.names(f_immunoreactive_output)
mma_rows <- row.names(f_mesenchymal_output)
pma_rows <- row.names(f_proliferative_output)
f_fallopian_output <- data.frame(f_fallopian_output, fma_rows)
f_immunoreactive_output <- data.frame(f_immunoreactive_output, ima_rows)
f_mesenchymal_output <- data.frame(f_mesenchymal_output, mma_rows)
f_proliferative_output <- data.frame(f_proliferative_output, pma_rows)
View(f_fallopian_output)
spc_ma_fallop <- subset(f_fallopian_output, f_fallopian_output$fma_rows %in% spc_fall$V1)
spc_ma_imm <- subset(f_immunoreactive_output, f_immunoreactive_output$ima_rows %in% spc_immuno$V1)
spc_ma_mesen <- subset(f_mesenchymal_output, f_mesenchymal_output$mma_rows %in% spc_mesen$V1)
spc_ma_prolif <- subset(f_proliferative_output, f_proliferative_output$pma_rows %in% spc_prolif$V1)
View(spc_prolif)
help("cor")
cor(spc_ma_fallop$P.Value, spc_fall$PValue, method="spearman")
spear_fallop_x <- spc_ma_fallop$P.Value
spear_fallop_y <- spc_fall$PValue
spear_imm_x <- spc_ma_imm$P.Value
spear_imm_y <- spc_immuno$PValue
spear_mesen_x <- spc_ma_mesen$P.Value
spear_mesen_y <- spc_mesen$PValue
spear_prolif_x <- spc_ma_prolif$P.Value
spear_prolif_y <- spc_prolif$PValue
View(spc_ma_fallop)
View(spc_ma_fallop)
cor(spear_fallop_x, spear_fallop_y, method = "spearman")
x <- cor(spear_fallop_x, spear_fallop_y, method = "spearman")
cor(spc_ma_fallop, spc_fall, method="spearman")
cor(spear_imm_x, spear_imm_y, method = "spearman")
cor(spear_mesen_x, spear_mesen_y, method = "spearman")
cor(spear_prolif_x, spear_prolif_y, method="spearman")
cor(spear_imm_x, spear_fallop_y, method="spearman")
cor(spear_imm_x[1:499], spear_fallop_y, method="spearman")
ma_fallop_ranks <- data.frame(spc_ma_fallop$fma_rows, spc_ma_fallop$P.Value)
ma_immuno_ranks <- data.frame(ima_rows, spc_ma_imm$P.Value)
ma_immuno_ranks <- data.frame(spc_ma_imm$ima_rows, spc_ma_imm$P.Value)
ma_mesen_ranks <- data.frame(spc_ma_mesen$mma_rows, spc_ma_mesen)
ma_mesen_ranks <- data.frame(spc_ma_mesen$mma_rows, spc_ma_mesen$P.Value)
ma_prolif_ranks <- data.frame(spc_ma_prolif$pma_rows, spc_ma_prolif$P.Value)
ma_f_ranks <- data.frame(spc_ma_fallop$fma_rows, 1:length(spc_ma_fallop$fma_rows))
View(ma_f_ranks)
ma_f_ranks <- data.frame(geneName <- spc_ma_fallop$fma_rows, rank = 1:length(spc_ma_fallop$fma_rows))
View(ma_f_ranks)
ma_f_ranks <- data.frame(geneName = spc_ma_fallop$fma_rows, rank = 1:length(spc_ma_fallop$fma_rows))
View(ma_f_ranks)
ma_i_ranks <- data.frame(geneName = spc_ma_imm$ima_rows, rank = 1:length(spc_ma_imm$ima_rows))
ma_m_ranks <- data.frame(geneName = spc_ma_mesen$mma_rows, rank=1:length(spc_ma_mesen$mma_rows))
ma_p_ranks <- data.frame(geneName = spc_ma_prolif$pma_rows, rank= 1:length(spc_ma_prolif$pma_rows))
sq_f_ranks <- data.frame(geneName = spc_fall$V1, rank = 1:length(spc_fall$V1))
sq_i_ranks <- data.frame(geneName = spc_immuno$V1, rank= 1:length(spc_immuno$V1))
sq_m_ranks <- data.frame(genename = spc_mesen$V1, rank = 1:length(spc_mesen$V1))
sq_p_ranks <- data.frame(geneName = spc_prolif$V1, rank= 1:length(spc_prolif$V1))
View(sq_f_ranks)
sq_f_ranks
order(sq_f_ranks$ranks)
sq_f_ranks <- sq_f_ranks[order(sq_f_ranks$rank),]
View(sq_f_ranks)
View(sq_f_ranks)
View(ma_f_ranks)
ma_f_ranks <- data.frame(geneName = spc_ma_fallop$fma_rows, rank = 1:length(spc_ma_fallop$fma_rows), stringsAsFactors = FALSE)
ma_i_ranks <- data.frame(geneName = spc_ma_imm$ima_rows, rank = 1:length(spc_ma_imm$ima_rows),stringsAsFactors = FALSE)
ma_m_ranks <- data.frame(geneName = spc_ma_mesen$mma_rows, rank=1:length(spc_ma_mesen$mma_rows),stringsAsFactors = FALSE)
ma_p_ranks <- data.frame(geneName = spc_ma_prolif$pma_rows, rank= 1:length(spc_ma_prolif$pma_rows),stringsAsFactors = FALSE)
sq_f_ranks <- data.frame(geneName = spc_fall$V1, rank = 1:length(spc_fall$V1),stringsAsFactors = FALSE)
sq_i_ranks <- data.frame(geneName = spc_immuno$V1, rank= 1:length(spc_immuno$V1),stringsAsFactors = FALSE)
sq_m_ranks <- data.frame(genename = spc_mesen$V1, rank = 1:length(spc_mesen$V1),stringsAsFactors = FALSE)
sq_p_ranks <- data.frame(geneName = spc_prolif$V1, rank= 1:length(spc_prolif$V1),stringsAsFactors = FALSE)
View(sq_f_ranks)
sq_f_ranks <- sq_f_ranks[order(sq_f_ranks$rank),]
View(sq_f_ranks)
View(sq_i_ranks)
View(sq_f_ranks)
help(order)
library(dplyr)
library(doBy)
install.packages("doBy")
library(doBy)
help(orderBy)
sq_f_ranks <- sq_f_ranks[order(sq_f_ranks$geneName),]
View(sq_f_ranks)
sq_f_ranks <- sq_f_ranks[order(sq_f_ranks$geneName),]
ma_f_ranks <- ma_f_ranks[order(ma_f_ranks$geneName),]
ma_i_ranks <- ma_i_ranks[order(ma_i_ranks$geneName),]
ma_m_ranks <- ma_m_ranks[order(ma_m_ranks$geneName),]
ma_p_ranks <- ma_p_ranks[order(ma_p_ranks$geneName),]
sq_f_ranks <- sq_f_ranks[order(sq_f_ranks$geneName),]
sq_i_ranks <- sq_i_ranks[order(sq_i_ranks$geneName),]
sq_m_ranks <- sq_m_ranks[order(sq_m_ranks$genename),]
sq_p_ranks <- sq_p_ranks[order(sq_p_ranks$geneName),]
View(sq_f_ranks)
View(sq_i_ranks)
View(sq_m_ranks)
View(sq_p_ranks)
View(ma_f_ranks)
View(ma_f_ranks)
View(ma_i_ranks)
View(ma_m_ranks)
View(ma_p_ranks)
cor(ma_f_ranks$rank, sq_f_ranks$rank, method='spearman')
spearman <- data.frame(Subtype = c("Fallopian", "Immunoreactive", "Mesenchymal", "Proliferative"), Rho.Value = c(cor(ma_f_ranks$rank, sq_f_ranks$rank, method="spearman"), cor(ma_i_ranks$rank, sq_i_ranks$rank, method="spearman"), cor(ma_m_ranks$rank, sq_m_ranks$rank, method="spearman"), cor(ma_p_ranks$rank, sq_p_ranks$rank, method="spearman")) )
View(spearman)
write.table(spearman, "C:/Users/david/Documents/GitHub/KUMC_OvarianCancer_Feb2017/GeneSetAnalysis/spearman_correlation.txt", sep="\t", row.names = FALSE)
View(spc_fall)
View(p_list)
View(a_spc_fall)
View(spc_fall)
spc_fall <- data.frame(spc_fall, stringsAsFactors = FALSE)
spc_fall <- data.frame(spc_fall, stringsAsFactors = FALSE)
spc_immuno <- data.frame(spc_immuno, stringsAsFactors = FALSE)
spc_mesen <- data.frame(spc_mesen, stringsAsFactors = FALSE)
spc_prolif <- data.frame(spc_prolif, stringsAsFactors = FALSE)
spc_ma_fall <- data.frame(spc_ma_fall, stringsAsFactors = FALSE)
spc_ma_imm <- data.frame(spc_ma_imm, stringsAsFactors = FALSE)
spc_ma_mesen <- data.frame(spc_ma_mesen, stringsAsFactors = FALSE)
spc_ma_prolif <- data.frame(spc_ma_prolif, stringsAsFactors = FALSE)
spc_ma_fallop <- data.frame(spc_ma_fallop, stringsAsFactors = FALSE)
spcs_fall <- spc_fall[order(spc_fall$V1), spc_fall$PValue]
spcs_fall <- spc_fall[order(spc_fall$V1), ]
View(spcs_fall)
spc_fall <- spc_fall[order(spc_fall$V1), ]
spc_immuno <- spc_immuno[order(spc_immuno$V1),]
spc_mesen <- spc_mesen[order(spc_mesen$V1),]
spc_prolif <- spc_prolif[order(spc_prolif$V1),]
spc_ma_fallop <- spc_ma_fallop[order(spc_ma_fallop$fma_rows),]
spc_ma_imm <- spc_ma_imm[order(spc_ma_imm$ima_rows),]
spc_ma_mesen <- spc_ma_mesen[order(spc_ma_mesen$mma_rows),]
spc_ma_prolif <- spc_ma_prolif[order(spc_ma_prolif$pma_rows),]
View(spc_fall)
help(plot)
plot(spc_ma_fallop$P.Value, spc_fall$PValue, xlab = "Microarray p-values", ylab = "RNA-seq p-values", main="p-values for Differential Gene Expression in Fallopian Subtype Ovarian Cancer")
plot(spc_ma_imm$P.Value, spc_immuno$PValue, xlab = "Microarray  p-values", ylab = "RNA-seq p-values", main= "Microarray p-values vs RNA-seq p-values for DE in Immunoreactive Subtype Ovarian Cancer")
plot(spc_ma_mesen$P.Value, spc_mesen$PValue, xlab= "Microarray p-values", ylab= "RNA-seq p-values", main="Microarray p-values vs RNA-seq p-values for DE in Mesenchymal Subtype Ovarian Cancer")
plot(spc_ma_prolif$P.Value, spc_prolif$PValue, xlab= "Microarray p-values", ylab= "RNA-seq p-values", main="Microarray p-values vs RNA-seq p-values for DE in Proliferative Subtype Ovarian Cancer")
test <- spc_ma_fallop$fma_rows == spc_fall$V1
View(spc_fall)
View(spc_ma_fallop)
test <- spc_ma_fallop$fma_rows %in% spc_fall$V1
test
xf_plot <- subset(spc_ma_fall, spc_ma_fall$PValue <= 0.05)
yf_plot <- subset(spc_fall, spc_fall$PValue <= 0.05)
xi_plot <-subset(spc_ma_imm, spc_ma_imm$P.Value <= 0.05)
yi_plot <-subset(spc_immuno, spc_immuno$PValue <= 0.05)
xm_plot <- subset(spc_ma_mesen, spc_ma_mesen$P.Value <= 0.05)
ym_plot <- subset(spc_mesen, spc_mesen$PValue, <= 0.05)
xp_plot <- subset(spc_ma_prolif, spc_ma_prolif$P.Value <=0.05)
yp_plot<- subset(spc_prolif, spc_prolif$PValue <= 0.05)
#plotting p values
plot(xf_plot$P.Value, yf_plot$PValue, xlab = "Microarray p-values", ylab = "RNA-seq p-values", main="Fallopian Subtype Ovarian Cancer")
plot(xi_plot$P.Value, yi_plot$PValue, xlab = "Microarray  p-values", ylab = "RNA-seq p-values", main= "Immunoreactive Subtype Ovarian Cancer")
plot(xm_plot$P.Value, ym_plot$PValue, xlab= "Microarray p-values", ylab= "RNA-seq p-values", main="Mesenchymal Subtype Ovarian Cancer")
plot(xp_plot$P.Value, yp_plot$PValue, xlab= "Microarray p-values", ylab= "RNA-seq p-values", main="Proliferative Subtype Ovarian Cancer")
View(yi_plot)
plot(spc_ma_fallop$P.Value, spc_fall$PValue, xlab = "Microarray p-values", ylab = "RNA-seq p-values", main="Fallopian Subtype Ovarian Cancer")
plot(spc_ma_imm$P.Value, spc_immuno$PValue, xlab = "Microarray  p-values", ylab = "RNA-seq p-values", main= "Immunoreactive Subtype Ovarian Cancer")
plot(spc_ma_mesen$P.Value, spc_mesen$PValue, xlab= "Microarray p-values", ylab= "RNA-seq p-values", main="Mesenchymal Subtype Ovarian Cancer")
plot(spc_ma_prolif$P.Value, spc_prolif$PValue, xlab= "Microarray p-values", ylab= "RNA-seq p-values", main="Proliferative Subtype Ovarian Cancer")
#computing spearman correlation
xm_plot <- subset(spc_ma_mesen, spc_ma_mesen$P.Value <= 0.05)
ym_plot <- subset(spc_mesen, spc_mesen$PValue <= 0.05)
xi_plot <- subset(xi_plot, xi_plot$ima_rows %in% yi_plot$V1)
xm_plot <- subset(xm_plot, xm_plot$mma_rows %in% ym_plot$V1)
xp_plot <- subset(xp_plot, xp_plot$pma_rows %in% yp_plot$V1)
xf_plot <- subset(spc_ma_fallop, spc_ma_fallop$P.Value <= 0.05)
xf_plot <- subset(xf_plot, xf_plot$fma_rows %in% yf_plot$V1)
plot(xf_plot$P.Value, yf_plot$PValue, xlab = "Microarray p-values", ylab = "RNA-seq p-values", main="Fallopian Subtype Ovarian Cancer")
plot(xi_plot$P.Value, yi_plot$PValue, xlab = "Microarray  p-values", ylab = "RNA-seq p-values", main= "Immunoreactive Subtype Ovarian Cancer")
plot(xm_plot$P.Value, ym_plot$PValue, xlab= "Microarray p-values", ylab= "RNA-seq p-values", main="Mesenchymal Subtype Ovarian Cancer")
plot(xp_plot$P.Value, yp_plot$PValue, xlab= "Microarray p-values", ylab= "RNA-seq p-values", main="Proliferative Subtype Ovarian Cancer")
spc_fallop <- subset(fallop_de, fallop_de$v1 %in% row.names(f_fallopian_output) and fallop_de$PValue <= 0.05)
spc_immuno <- subset(immuno_de, immuno_de$V1 %in% row.names(f_immunoreactive_output) and immuno_de$PValue <= 0.05)
spc_mesen <- subset(mesen_de, mesen_de$V1 %in% row.names(f_mesenchymal_output) and mesen_de$PValue <= 0.05)
spc_prolif <- subset(prolif_de, prolif_de$V1 %in% row.names(f_proliferative_output) and prolif_de$PValue <= 0.05)
spc_ma_fallop <- subset(f_fallopian_output, f_fallopian_output$fma_rows %in% spc_fall$V1)
spc_ma_imm <- subset(f_immunoreactive_output, f_immunoreactive_output$ima_rows %in% spc_immuno$V1)
spc_ma_mesen <- subset(f_mesenchymal_output, f_mesenchymal_output$mma_rows %in% spc_mesen$V1)
spc_ma_prolif <- subset(f_proliferative_output, f_proliferative_output$pma_rows %in% spc_prolif$V1)
spc_fall <- data.frame(spc_fall, stringsAsFactors = FALSE)
spc_immuno <- data.frame(spc_immuno, stringsAsFactors = FALSE)
spc_mesen <- data.frame(spc_mesen, stringsAsFactors = FALSE)
spc_prolif <- data.frame(spc_prolif, stringsAsFactors = FALSE)
spc_ma_fall <- data.frame(spc_ma_fall, stringsAsFactors = FALSE)
spc_ma_imm <- data.frame(spc_ma_imm, stringsAsFactors = FALSE)
spc_ma_mesen <- data.frame(spc_ma_mesen, stringsAsFactors = FALSE)
spc_ma_prolif <- data.frame(spc_ma_prolif, stringsAsFactors = FALSE)
spc_fall <- spc_fall[order(spc_fall$V1), ]
spc_immuno <- spc_immuno[order(spc_immuno$V1),]
spc_mesen <- spc_mesen[order(spc_mesen$V1),]
spc_prolif <- spc_prolif[order(spc_prolif$V1),]
spc_ma_fallop <- spc_ma_fallop[order(spc_ma_fallop$fma_rows),]
spc_ma_imm <- spc_ma_imm[order(spc_ma_imm$ima_rows),]
spc_ma_mesen <- spc_ma_mesen[order(spc_ma_mesen$mma_rows),]
spc_ma_prolif <- spc_ma_prolif[order(spc_ma_prolif$pma_rows),]
xf_plot <- subset(spc_ma_fall, spc_ma_fall$PValue <= 0.05)
yf_plot <- subset(spc_fall, spc_fall$PValue <= 0.05)
xi_plot <-subset(spc_ma_imm, spc_ma_imm$P.Value <= 0.05)
yi_plot <-subset(spc_immuno, spc_immuno$PValue <= 0.05)
xm_plot <- subset(spc_ma_mesen, spc_ma_mesen$P.Value <= 0.05)
ym_plot <- subset(spc_mesen, spc_mesen$PValue, <= 0.05)
xp_plot <- subset(spc_ma_prolif, spc_ma_prolif$P.Value <=0.05)
yp_plot<- subset(spc_prolif, spc_prolif$PValue <= 0.05)
View(ma_fallop)
View(xf_plot)
View(yf_plot)
tyf <- yf_plot$PValue
tyf <- data.frame(tyf)
View(tyf)
help("log")
tyf <- log(tyf)
txf <- log(xf_plot$P.Value)
txf <- data.frame(txf)
View(txf)
plot(txf, tyf, xlab="Microarray P-Values", ylab = "RNA-seq p-values", main= "Fallopian Subtype")
plot(txf, tyf)
plot(txf$txf, tyf$tyf)
plot(log(xi_plot$P.Value), log(yi_plot$PValue))
View(xi_plot)
library(limma)
View(xi_plot)
xi_plot <-subset(spc_ma_imm, spc_ma_imm$P.Value <= 0.05)
yi_plot <-subset(spc_immuno, spc_immuno$PValue <= 0.05)
xm_plot <- subset(spc_ma_mesen, spc_ma_mesen$P.Value <= 0.05)
ym_plot <- subset(spc_mesen, spc_mesen$PValue, <= 0.05)
xp_plot <- subset(spc_ma_prolif, spc_ma_prolif$P.Value <=0.05)
yp_plot<- subset(spc_prolif, spc_prolif$PValue <= 0.05)
xi_plot <-subset(spc_ma_imm, spc_ma_imm$P.Value <= 0.05)
yi_plot <-subset(spc_immuno, spc_immuno$PValue <= 0.05)
xm_plot <- subset(spc_ma_mesen, spc_ma_mesen$P.Value <= 0.05)
ym_plot <- subset(spc_mesen, spc_mesen$PValue <= 0.05)
xp_plot <- subset(spc_ma_prolif, spc_ma_prolif$P.Value <=0.05)
yp_plot<- subset(spc_prolif, spc_prolif$PValue <= 0.05)
View(yi_plot)
View(xi_plot)
txi_plot <- subset(xi_plot,  xi_plot$ima_rows %in% yi_plot$V1)
plot(log(txi_plot$P.Value), log(yi_plot$PValue))
txm_plot <- subset(xm_plot, xm_plot$mma_rows %in% ym_plot$V1)
txp_plot <- subset(xp_plot, xp_plot$pma_rows %in% yp_plot$V1)
plot(log(txm_plot$P.Value), log(xm_plot$P.Value), main="Proliferative")
plot(log(txm_plot$P.Value), log(ym_plot$P.Value), main="Proliferative")
plot(log(txm_plot$P.Value), log(ym_plot$P.Value), main="Proliferative")
class(ym_plot$PValue)
class(txm_plot$P.Value)
plot(log(txm_plot$P.Value), log(ym_plot$P.Value))
class(ym_plot$PValue)
plot(log(txm_plot$P.Value), log(ym_plot$PValue))
plot(log(txp_plot$P.Value), log(yp_plot$PValue))
xf_plot <- subset(spc_ma_fall, spc_ma_fall$PValue <= 0.05)
yf_plot <- subset(spc_fall, spc_fall$PValue <= 0.05)
xf_plot <- subset(xf_plot, xf_plot$fma_rows %in% yf_plot$V1)
xi_plot <-subset(spc_ma_imm, spc_ma_imm$P.Value <= 0.05)
yi_plot <-subset(spc_immuno, spc_immuno$PValue <= 0.05)
xi_plot <- subset(xi_plot, xi_plot$ima_rows %in% yi_plot$V1)
xm_plot <- subset(spc_ma_mesen, spc_ma_mesen$P.Value <= 0.05)
ym_plot <- subset(spc_mesen, spc_mesen$PValue <= 0.05)
xm_plot <- subset(xm_plot, xm_plot$mma_rows %in% ym_plot$V1)
xp_plot <- subset(spc_ma_prolif, spc_ma_prolif$P.Value <=0.05)
yp_plot<- subset(spc_prolif, spc_prolif$PValue <= 0.05)
xp_plot <- subset(xp_plot, xp_plot$pma_rows %in% yp_plot$V1)
#plotting log(p values)
plot(log(xf_plot$P.Value), log(yf_plot$PValue), xlab = "Microarray p-values", ylab = "RNA-seq p-values", main="Fallopian Subtype Ovarian Cancer")
plot(log(xi_plot$P.Value), log(yi_plot$PValue), xlab = "Microarray  p-values", ylab = "RNA-seq p-values", main= "Immunoreactive Subtype Ovarian Cancer")
plot(log(xm_plot$P.Value), log(ym_plot$PValue), xlab= "Microarray p-values", ylab= "RNA-seq p-values", main="Mesenchymal Subtype Ovarian Cancer")
plot(log(xp_plot$P.Value), log(yp_plot$PValue), xlab= "Microarray p-values", ylab= "RNA-seq p-values", main="Proliferative Subtype Ovarian Cancer")
getwd()
setwd("C:/Users/david/Documents/GitHub/TCGAvsHPA/intermediate_data/data_BLCA/pathways")
fileNames <- list.files()
help("data.frame")
dataList <- lapply(fileNames, read.delim)
names(dataList) <- objNames
objNames <- c("DE_data", "loc_data", "union_data")
names(dataList) <- objNames
pathList <- list( data.frame(de_data <- dataList$DE_data$pathway), data.frame(loc_data <- dataList$loc_data$pathway),
data.frame(union_data <- dataList$union_data$pathway))
lapply(1:3, function(x){write.table(pathList[x], out_names[x], sep = "\t", row.names = FALSE, col.names = FALSE)})
out_names <- c("path_blca_de.txt", "path_blca_loc.txt", "path_blca_un.txt")
lapply(1:3, function(x){write.table(pathList[x], out_names[x], sep = "\t", row.names = FALSE, col.names = FALSE)})
View(dataList$DE_data)
View(pathList[1])
View(pathList[2])
View(pathList[3])
getwd()
setwd("C:/Users/david/Documents/GitHub/TCGAvsHPA/intermediate_data/data_BRCA/pathways")
setwd("C:/Users/david/Documents/GitHub/TCGAvsHPA/intermediate_data/data_BRCA/pathway")
fileNames <- list.files()
pathList <- list( data.frame(de_data <- dataList$DE_data$pathway), data.frame(loc_data <- dataList$loc_data$pathway),data.frame(union_data <- dataList$union_data$pathway))
out_names <- c("path_blca_de.txt", "path_blca_loc.txt", "path_blca_un.txt")
lapply(1:3, function(x){write.table(pathList[x], out_names[x], sep = "\t", row.names = FALSE, col.names = FALSE)})
setwd("C:/Users/david/Documents/GitHub/TCGAvsHPA/intermediate_data/data_LIHC/pathway")
fileNames <- list.files()
pathList <- list( data.frame(de_data <- dataList$DE_data$pathway), data.frame(loc_data <- dataList$loc_data$pathway),data.frame(union_data <- dataList$union_data$pathway))
out_names <- c("path_LIHC_de.txt", "path_LIHC_loc.txt", "path_LIHC_un.txt")
lapply(1:3, function(x){write.table(pathList[x], out_names[x], sep = "\t", row.names = FALSE, col.names = FALSE)})
setwd("C:/Users/david/Documents/GitHub/TCGAvsHPA/intermediate_data/data_PRAD/pathway")
fileNames <- list.files()
pathList <- list( data.frame(de_data <- dataList$DE_data$pathway), data.frame(loc_data <- dataList$loc_data$pathway),data.frame(union_data <- dataList$union_data$pathway))
out_names <- c("path_PRAD_de.txt", "path_PRAD_loc.txt", "path_PRAD_un.txt")
lapply(1:3, function(x){write.table(pathList[x], out_names[x], sep = "\t", row.names = FALSE, col.names = FALSE)})
setwd("C:/Users/david/Documents/GitHub/TCGAvsHPA/intermediate_data/data_BRCA/pathway")
fileNames <- list.files()
pathList <- list( data.frame(de_data <- dataList$DE_data$pathway), data.frame(loc_data <- dataList$loc_data$pathway),data.frame(union_data <- dataList$union_data$pathway))
out_names <- c("path_BRCA_de.txt", "path_BRCA_loc.txt", "path_BRCA_un.txt")
lapply(1:3, function(x){write.table(pathList[x], out_names[x], sep = "\t", row.names = FALSE, col.names = FALSE)})
